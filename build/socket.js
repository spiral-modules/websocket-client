!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.SFSocket=n():t.SFSocket=n()}(window,(function(){return function(t){var n={};function e(s){if(n[s])return n[s].exports;var i=n[s]={i:s,l:!1,exports:{}};return t[s].call(i.exports,i,i.exports,e),i.l=!0,i.exports}return e.m=t,e.c=n,e.d=function(t,n,s){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:s})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(e.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var i in t)e.d(s,i,function(n){return t[n]}.bind(null,i));return s},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=0)}([function(t,n,e){"use strict";var s,i;e.r(n),function(t){t.CONNECTED="connected",t.MESSAGE="message",t.CONNECTING="connecting",t.DISCONNECTED="disconnected",t.ERROR="error",t.OPEN="open",t.INITIALIZED="initialized",t.CLOSED="closed",t.UNAVAILABLE="unavailable",t.CHANNEL_JOINED="channel_joined",t.CHANNEL_JOIN_FAILED="channel_join_failed",t.CHANNEL_LEFT="channel_left"}(s||(s={})),function(t){t.CLOSED="closed",t.JOINING="joining",t.JOINED="joined",t.LEAVING="leaving",t.ERROR="error"}(i||(i={}));class o{constructor(t,n){this.channelStatus=i.CLOSED,this.name=t,this.socket=n,this.cMgr=n.cMgr,this.enabled=!1,this.cMgr.bind(s.DISCONNECTED,()=>{this.channelStatus=i.CLOSED}),this.cMgr.bind(s.CHANNEL_JOIN_FAILED,t=>{t.indexOf(this.name)>=0&&(this.channelStatus=i.CLOSED)}),this.cMgr.bind(s.CHANNEL_JOINED,t=>{t.indexOf(this.name)>=0&&(this.channelStatus=i.JOINED)}),this.cMgr.bind(s.CHANNEL_LEFT,t=>{t.indexOf(this.name)>=0&&(this.channelStatus=i.CLOSED)}),this.cMgr.bind(s.CONNECTED,()=>{this.enabled&&this.sendJoinCommand()})}get status(){return this.channelStatus}get isActive(){return this.cMgr.isConnected()&&this.channelStatus===i.JOINED}join(){this.enabled||(this.enabled=!0,this.cMgr.isConnected()&&this.sendJoinCommand())}sendJoinCommand(){this.channelStatus!==i.JOINING&&(this.channelStatus=i.JOINING,this.cMgr.sendJoin([this.name]))}subscribe(t,n){this.cMgr.bind(t,n,this.name)}unsubscribe(t,n){this.cMgr.unbind(t,n,this.name)}leave(){this.channelStatus!==i.LEAVING&&(this.enabled=!1,this.channelStatus=i.LEAVING,this.cMgr.sendLeave([this.name]),this.channelStatus=i.CLOSED)}}class r{constructor(){this.callbacks={}}get(t){return this.callbacks[t]||[]}add(t,n,e){this.callbacks[t]||(this.callbacks[t]=[]),this.callbacks[t].push({fn:n,channel:e||null})}remove(t,n,e){if(!t&&!n&&!e)return void(this.callbacks={});const s=t?[t]:Object.keys(this.callbacks);n||e?this.removeCallback(s,n,e):this.removeAllCallbacks(s)}removeCallback(t,n,e){t.forEach(t=>{const s=this.callbacks[t]||[];this.callbacks[t]=s.filter(t=>{const s=n&&n===t.fn,i=e&&e===t.channel;return!s&&!i})})}removeAllCallbacks(t){t.forEach(t=>{delete this.callbacks[t]})}}class a{constructor(){this.callbacks=new r}bind(t,n,e){return this.callbacks.add(t,n,e),this}unbind(t,n,e){return this.callbacks.remove(t,n,e),this}emit(t,n){const e=this.callbacks.get(t),s=(i=n)&&i.context&&"string"==typeof i.context.channel?n.context.channel:null;var i;return e&&e.length>0&&e.forEach(t=>{const e=t.channel===s;(!t.channel||!s||e)&&t.fn(n)}),this}}var c;!function(t){t.CHANNEL_JOINED="@join",t.CHANNEL_JOIN_FAILED="#join",t.CHANNEL_LEFT="@leave",t.CHANNEL_LEAVE_FAILED="#leave"}(c||(c={}));const l=new Set([c.CHANNEL_JOINED,c.CHANNEL_JOIN_FAILED,c.CHANNEL_LEFT,c.CHANNEL_LEAVE_FAILED]),h=t=>{const n={topic:t.type,payload:t.payload};return JSON.stringify(n)};var d;!function(t){t.JOIN="join",t.LEAVE="leave"}(d||(d={}));const E=new Set([d.JOIN,d.LEAVE]);class u extends a{constructor(t,n){super(),this.id=t,this.transport=n,this.bindListeners()}send(t){return!!this.transport&&this.transport.send(t)}sendCommand(t,n){if(E.has(t))throw new Error(`${t} is a reserved command, cant be sent manually`);return this.send(h({type:t,payload:n}))}sendJoin(t){this.send(h({type:d.JOIN,payload:t}))}sendLeave(t){this.send(h({type:d.LEAVE,payload:t}))}close(){this.transport&&this.transport.close()}bindListeners(){const t=t=>{this.transport&&(this.transport.unbind(s.MESSAGE,t.message),this.transport.unbind(s.ERROR,t.error),this.transport.unbind(s.CLOSED,t.closed))},n={message:t=>{let n=null;try{n=(t=>{if(t){const n=JSON.parse(t);if(l.has(n.topic)&&!n.payload&&Array.isArray(n.payload))return{type:p.ERROR,error:"WS event system event payload is invalid. Should be a string array",data:"MessageParseError"};switch(n.topic){case c.CHANNEL_JOINED:return{type:p.CHANNEL_JOINED,error:null,data:n.payload};case c.CHANNEL_JOIN_FAILED:return{type:p.CHANNEL_JOIN_FAILED,error:null,data:n.payload};case c.CHANNEL_LEFT:return{type:p.CHANNEL_LEFT,error:null,data:n.payload};case c.CHANNEL_LEAVE_FAILED:return{type:p.CHANNEL_LEAVE_FAILED,error:null,data:n.payload};default:return{type:p.MESSAGE,error:null,data:n.payload||null,context:{...n.topic?{channel:n.topic}:{}}}}}return{type:p.ERROR,error:"MessageEvent has no data property",data:"MessageParseError"}})(t.data)}catch(n){this.emit(s.ERROR,{type:p.ERROR,error:n,data:JSON.stringify(t)})}if(n)switch(n.type){case p.ERROR:this.emit(s.ERROR,n);break;case p.CHANNEL_JOIN_FAILED:this.emit(s.CHANNEL_JOIN_FAILED,n.data);break;case p.CHANNEL_JOINED:this.emit(s.CHANNEL_JOINED,n.data);break;case p.CHANNEL_LEFT:this.emit(s.CHANNEL_LEFT,n.data);break;case p.CHANNEL_LEAVE_FAILED:this.emit(s.ERROR,n);break;default:this.emit(s.MESSAGE,n)}},error:t=>{this.emit(s.ERROR,{...t,type:p.ERROR,data:null})},closed:e=>{var i;t(n),(i=e).context&&void 0!==i.context.code&&this.handleCloseEvent(e),this.transport=null,this.emit(s.CLOSED,e)}};this.transport&&(this.transport.bind(s.MESSAGE,n.message),this.transport.bind(s.ERROR,n.error),this.transport.bind(s.CLOSED,n.closed))}handleCloseEvent(t){const n=(t=>t.context&&t.context.code?t.context.code<4e3&&t.context.code>=1002&&t.context.code<=1004?{...t,error:"Socket is unavailable"}:t:(console.error("Socket event do not contain close code"),{...t,error:"Connection refused"}))(t);n.type===p.CLOSED?this.emit(s.CLOSED,n):this.emit(s.ERROR,n)}}class N extends a{constructor(t,n){super(),this.initialize=()=>{const t=this;t.hooks.isInitialized()?t.changeState(s.INITIALIZED):t.onClose()},this.hooks=t,this.name=n,this.state="new"}connect(){if(this.socket||"initialized"!==this.state)return!1;const{url:t}=this.hooks;try{this.socket=this.hooks.getSocket(t)}catch(t){return setTimeout(()=>{this.onError(t),this.onClosed({type:p.ERROR,data:null,error:t,context:{}})}),!1}return this.bindListeners(),this.changeState(s.CONNECTING),!0}close(){return!!this.socket&&(this.socket.close(),!0)}send(t){return"open"===this.state&&(setTimeout(()=>{this.socket&&this.socket.send(t)}),!0)}unbindListeners(){this.socket&&(this.socket.onopen=null,this.socket.onerror=null,this.socket.onclose=null,this.socket.onmessage=null)}onOpen(){this.changeState(s.OPEN),this.socket&&(this.socket.onopen=null)}onError(t){this.emit(s.ERROR,{type:p.ERROR,error:t||"websocket connection error",data:null})}onClose(t){t?this.onClosed({type:t.wasClean?p.CLOSED:p.ERROR,data:t.wasClean?t.reason:null,error:t.wasClean?null:t.reason,context:{code:t.code}}):this.onClosed({type:p.CLOSED,data:null,error:"Closed for unknown reason",context:{}}),this.unbindListeners(),this.socket=void 0}onMessage(t){this.emit(s.MESSAGE,{type:p.MESSAGE,data:"string"==typeof t.data?t.data:JSON.stringify(t.data),error:null})}bindListeners(){this.socket&&(this.socket.onopen=()=>{this.onOpen()},this.socket.onerror=()=>{this.onError()},this.socket.onclose=t=>{this.onClose(t)},this.socket.onmessage=t=>{this.onMessage(t)})}changeState(t){console.log("Change state",t),this.state=t,this.emit(t,void 0)}onClosed(t){this.state=s.CLOSED,this.emit(s.CLOSED,t)}}class C{constructor(t,n){this.options=n||{};const e=`ws${n.useTLS?"s":""}`,s=`${n.host}:${n.port}`,i=n.queryParams?Object.entries(n.queryParams).map(([t,n])=>`${encodeURIComponent(t)}=${encodeURIComponent(t)}`).join("&"):null,o=`${e}://${s}/${n.path}${i?`?${i}`:""}`;this.hooks={url:o,isInitialized:()=>!!window.WebSocket,getSocket:t=>new WebSocket(t)},this.name=t}connect(t){let n=!1;const e=new N(this.hooks,this.name),i=()=>{e.unbind(s.INITIALIZED,i),e.connect()},o=()=>{e.unbind(s.INITIALIZED,i),e.unbind(s.OPEN,r),e.unbind(s.ERROR,a),e.unbind(s.CLOSED,c)},r=()=>{n=!0,o();const s=new u("",e);t(null,s)},a=n=>{o(),t(n)},c=()=>{o()};return e.bind(s.INITIALIZED,i),e.bind(s.OPEN,r),e.bind(s.ERROR,a),e.bind(s.CLOSED,c),e.initialize(),{abort:()=>{n||(o(),e.close())}}}}class b extends a{constructor(t){super(),this.options=t||{},this.state="initialized",this.connection=null,this.errorCallbacks=this.buildErrorCallbacks(),this.connectionCallbacks=this.buildConnectionCallbacks(this.errorCallbacks),this.transport=new C("ws",t),this.runner=null,this.unavailableTimer=0,this.retryTimer=0}connect(){this.connection||this.runner||(this.updateState(s.CONNECTING),this.startConnecting(),this.setUnavailableTimer())}send(t){return!!this.connection&&this.connection.send(t)}sendCommand(t,n){return!!this.connection&&this.connection.sendCommand(t,n)}sendJoin(t){return this.connection&&this.connection.sendJoin(t),!1}sendLeave(t){return this.connection&&this.connection.sendLeave(t),!1}disconnect(){this.disconnectInternally(),this.updateState(s.DISCONNECTED)}isConnected(){return this.state===s.CONNECTED}startConnecting(){const t=(n,e)=>{n?this.runner=this.transport.connect(t):(this.abortConnecting(),this.clearUnavailableTimer(),this.setConnection(e),this.updateState(s.CONNECTED))};this.runner=this.transport.connect(t)}abortConnecting(){this.runner&&(this.runner.abort(),this.runner=null)}disconnectInternally(){if(this.abortConnecting(),this.clearRetryTimer(),this.clearUnavailableTimer(),this.connection){const t=this.abandonConnection();t&&t.close()}}retryIn(t){t>0&&this.emit(s.CONNECTING,{type:p.CONNECTING,data:String(Math.round(t/1e3)),error:null}),this.retryTimer=setTimeout(()=>{this.disconnectInternally(),this.connect()},t||0)}clearRetryTimer(){this.retryTimer&&(this.retryTimer&&clearTimeout(this.retryTimer),this.retryTimer=0)}setUnavailableTimer(){this.unavailableTimer=setTimeout(()=>{this.updateState(s.UNAVAILABLE)},this.options.unavailableTimeout)}clearUnavailableTimer(){this.unavailableTimer&&clearTimeout(this.unavailableTimer),this.unavailableTimer=0}buildConnectionCallbacks(t){return{...t,message:t=>{this.emit(s.MESSAGE,t)},error:t=>{this.emit(s.ERROR,t)},closed:t=>{this.abandonConnection(),this.shouldRetry()&&this.retryIn(1e3),this.emit(s.CLOSED,t)},channelJoined:t=>this.emit(s.CHANNEL_JOINED,t),channelJoinFailed:t=>this.emit(s.CHANNEL_JOIN_FAILED,t),channelLeft:t=>this.emit(s.CHANNEL_LEFT,t)}}buildErrorCallbacks(){const t=t=>n=>{n.error&&this.emit(s.ERROR,{type:p.ERROR,data:null,error:n.error}),t(n)};return{refused:t(()=>{this.disconnect()}),unavailable:t(()=>{this.retryIn(1e3)})}}setConnection(t){this.connection=t,this.connection&&(this.connection.bind(s.MESSAGE,this.connectionCallbacks.message),this.connection.bind(s.CHANNEL_LEFT,this.connectionCallbacks.channelLeft),this.connection.bind(s.CHANNEL_JOIN_FAILED,this.connectionCallbacks.channelJoinFailed),this.connection.bind(s.CHANNEL_JOINED,this.connectionCallbacks.channelJoined),this.connection.bind(s.ERROR,this.connectionCallbacks.error),this.connection.bind(s.CLOSED,this.connectionCallbacks.closed))}abandonConnection(){if(!this.connection)return null;this.connection.unbind(s.MESSAGE,this.connectionCallbacks.message),this.connection.unbind(s.CHANNEL_LEFT,this.connectionCallbacks.channelLeft),this.connection.unbind(s.CHANNEL_JOIN_FAILED,this.connectionCallbacks.channelJoinFailed),this.connection.unbind(s.CHANNEL_JOINED,this.connectionCallbacks.channelJoined),this.connection.unbind(s.ERROR,this.connectionCallbacks.error),this.connection.unbind(s.CLOSED,this.connectionCallbacks.closed);const{connection:t}=this;return this.connection=null,t}updateState(t){const n=this.state;this.state=t,n!==t&&this.emit(t,void 0)}shouldRetry(){return this.state===s.CONNECTING||this.state===s.CONNECTED}}const L={host:"",port:80,path:"",unavailableTimeout:1e4,useTLS:!1};var p;!function(t){t.CONNECTING="sfSocket:connecting",t.MESSAGE="sfSocket:message",t.CHANNEL_JOINED="channel_joined",t.CHANNEL_JOIN_FAILED="channel_join_failed",t.CHANNEL_LEFT="channel_left",t.CHANNEL_LEAVE_FAILED="channel_leave_failed",t.ERROR="sfSocket:error",t.CLOSED="sfSocket:closed"}(p||(p={}));class O{constructor(t){if(this.channels={},!t||"object"!=typeof t)throw new Error("sfSocket options should be an object");const n=t||{};this.config={...L,port:n.useTLS?443:80,...n},this.cMgr=new b(this.config),this.cMgr.bind(s.CONNECTED,()=>{Object.values(this.channels).forEach(t=>{t.join()})}),this.cMgr.bind(s.ERROR,t=>{console.error(t)}),O.instances.push(this),O.isReady&&this.connect()}static ready(){O.isReady=!0,O.instances.forEach(t=>{t.connect()})}connect(){this.cMgr.connect()}disconnect(){this.cMgr.disconnect()}sendCommand(t,n){return this.cMgr.sendCommand(t,n)}joinChannelList(t){t.forEach(t=>{this.joinChannel(t)})}leaveChannelList(t){t.forEach(t=>{this.leaveChannel(t)})}subscribe(t,n,e){return this.cMgr.bind(t,n,e)}unsubscribe(t,n,e){return this.cMgr.unbind(t,n,e)}joinChannel(t){if(this.channels[t])throw new Error(`Channel ${t} already exists`);return this.channels[t]=new o(t,this),this.channels[t]}leaveChannel(t){if(!this.channels[t])throw new Error(`Channel ${t} does not exist`);const n=this.channels[t];return n.leave(),delete this.channels[t],n}getChannel(t){return this.channels[t]}}O.instances=[],O.isReady=!1,e.d(n,"makeSocketOptions",(function(){return m})),e.d(n,"SFSocket",(function(){return O})),e.d(n,"eventNames",(function(){return s}));const m=t=>{const n=new URL(t),e=n.protocol?n.protocol.replace(":",""):null;return n.hostname&&n.port&&e?{host:n.hostname,port:n.port,path:e}:null};n.default=O}])}));
//# sourceMappingURL=socket.js.map