/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./lib/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./lib/callbackRegistry.ts":
/*!*********************************!*\
  !*** ./lib/callbackRegistry.ts ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CallbackRegistry; });\nfunction prefix(name) {\n    return `sf:${name}`;\n}\nclass CallbackRegistry {\n    constructor() {\n        this.callbacks = {};\n    }\n    get(name) {\n        return this.callbacks[prefix(name)];\n    }\n    add(name, callback, channel) {\n        const prefixedEventName = prefix(name);\n        this.callbacks[prefixedEventName] = this.callbacks[prefixedEventName] || [];\n        this.callbacks[prefixedEventName].push({\n            fn: callback,\n            channel: channel || null,\n        });\n    }\n    remove(name, callback, channel) {\n        if (!name && !callback && !channel) {\n            this.callbacks = {};\n            return;\n        }\n        const names = name ? [prefix(name)] : Object.keys(this.callbacks);\n        if (callback || channel) {\n            this.removeCallback(names, callback, channel);\n        }\n        else {\n            this.removeAllCallbacks(names);\n        }\n    }\n    removeCallback(names, callback, channel) {\n        names.forEach((name) => {\n            const callbacks = this.callbacks[name] || [];\n            this.callbacks[name] = callbacks.filter((existedCallback) => {\n                const isEqualCallback = callback && callback === existedCallback.fn;\n                const isEqualChannel = channel && channel === existedCallback.channel;\n                return !isEqualCallback && !isEqualChannel;\n            });\n            if (this.callbacks[name].length === 0) {\n                delete this.callbacks[name];\n            }\n        });\n    }\n    removeAllCallbacks(names) {\n        names.forEach((name) => {\n            delete this.callbacks[name];\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9saWIvY2FsbGJhY2tSZWdpc3RyeS50cz8zMDQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVNBO0FBQUE7QUFBQSxTQUFTLE1BQU0sQ0FBQyxJQUFZO0lBQzFCLE9BQU8sTUFBTSxJQUFJLEVBQUUsQ0FBQztBQUN0QixDQUFDO0FBRWMsTUFBTSxnQkFBZ0I7SUFHbkM7UUFDRSxJQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRUQsR0FBRyxDQUFDLElBQWE7UUFDZixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUVELEdBQUcsQ0FBQyxJQUFhLEVBQUUsUUFBbUIsRUFBRSxPQUFnQjtRQUN0RCxNQUFNLGlCQUFpQixHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUV2QyxJQUFJLENBQUMsU0FBUyxDQUFDLGlCQUFpQixDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUM1RSxJQUFJLENBQUMsU0FBUyxDQUFDLGlCQUFpQixDQUFDLENBQUMsSUFBSSxDQUFDO1lBQ3JDLEVBQUUsRUFBRSxRQUFRO1lBQ1osT0FBTyxFQUFFLE9BQU8sSUFBSSxJQUFJO1NBQ3pCLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxNQUFNLENBQUMsSUFBYSxFQUFFLFFBQW1CLEVBQUUsT0FBZ0I7UUFDekQsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNsQyxJQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQztZQUNwQixPQUFPO1NBQ1I7UUFFRCxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRWxFLElBQUksUUFBUSxJQUFJLE9BQU8sRUFBRTtZQUN2QixJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUM7U0FDL0M7YUFBTTtZQUNMLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUNoQztJQUNILENBQUM7SUFFTyxjQUFjLENBQUMsS0FBZ0IsRUFBRSxRQUFvQixFQUFFLE9BQWlCO1FBQzlFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUNyQixNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUU3QyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQ3JDLENBQUMsZUFBMEIsRUFBRSxFQUFFO2dCQUM3QixNQUFNLGVBQWUsR0FBRyxRQUFRLElBQUksUUFBUSxLQUFLLGVBQWUsQ0FBQyxFQUFFLENBQUM7Z0JBQ3BFLE1BQU0sY0FBYyxHQUFHLE9BQU8sSUFBSSxPQUFPLEtBQUssZUFBZSxDQUFDLE9BQU8sQ0FBQztnQkFFdEUsT0FBTyxDQUFDLGVBQWUsSUFBSSxDQUFDLGNBQWMsQ0FBQztZQUM3QyxDQUFDLENBQ0YsQ0FBQztZQUNGLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUNyQyxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDN0I7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTyxrQkFBa0IsQ0FBQyxLQUFnQjtRQUN6QyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7WUFDckIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGIiwiZmlsZSI6Ii4vbGliL2NhbGxiYWNrUmVnaXN0cnkudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgSUNhbGxiYWNrIHtcbiAgZm46IEZ1bmN0aW9uO1xuICBjaGFubmVsOiBzdHJpbmcgfCBudWxsO1xufVxuXG5pbnRlcmZhY2UgSUNhbGxiYWNrVGFibGUge1xuICBbaW5kZXg6IHN0cmluZ106IElDYWxsYmFja1tdO1xufVxuXG5mdW5jdGlvbiBwcmVmaXgobmFtZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIGBzZjoke25hbWV9YDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FsbGJhY2tSZWdpc3RyeSB7XG4gIGNhbGxiYWNrczogSUNhbGxiYWNrVGFibGU7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5jYWxsYmFja3MgPSB7fTtcbiAgfVxuXG4gIGdldChuYW1lIDogc3RyaW5nKSA6IElDYWxsYmFja1tdIHtcbiAgICByZXR1cm4gdGhpcy5jYWxsYmFja3NbcHJlZml4KG5hbWUpXTtcbiAgfVxuXG4gIGFkZChuYW1lIDogc3RyaW5nLCBjYWxsYmFjayA6IEZ1bmN0aW9uLCBjaGFubmVsPzogc3RyaW5nKSB7XG4gICAgY29uc3QgcHJlZml4ZWRFdmVudE5hbWUgPSBwcmVmaXgobmFtZSk7XG5cbiAgICB0aGlzLmNhbGxiYWNrc1twcmVmaXhlZEV2ZW50TmFtZV0gPSB0aGlzLmNhbGxiYWNrc1twcmVmaXhlZEV2ZW50TmFtZV0gfHwgW107XG4gICAgdGhpcy5jYWxsYmFja3NbcHJlZml4ZWRFdmVudE5hbWVdLnB1c2goe1xuICAgICAgZm46IGNhbGxiYWNrLFxuICAgICAgY2hhbm5lbDogY2hhbm5lbCB8fCBudWxsLFxuICAgIH0pO1xuICB9XG5cbiAgcmVtb3ZlKG5hbWU/OiBzdHJpbmcsIGNhbGxiYWNrPzogRnVuY3Rpb24sIGNoYW5uZWw/OiBzdHJpbmcpIHtcbiAgICBpZiAoIW5hbWUgJiYgIWNhbGxiYWNrICYmICFjaGFubmVsKSB7XG4gICAgICB0aGlzLmNhbGxiYWNrcyA9IHt9O1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IG5hbWVzID0gbmFtZSA/IFtwcmVmaXgobmFtZSldIDogT2JqZWN0LmtleXModGhpcy5jYWxsYmFja3MpO1xuXG4gICAgaWYgKGNhbGxiYWNrIHx8IGNoYW5uZWwpIHtcbiAgICAgIHRoaXMucmVtb3ZlQ2FsbGJhY2sobmFtZXMsIGNhbGxiYWNrLCBjaGFubmVsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5yZW1vdmVBbGxDYWxsYmFja3MobmFtZXMpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgcmVtb3ZlQ2FsbGJhY2sobmFtZXMgOiBzdHJpbmdbXSwgY2FsbGJhY2s/IDogRnVuY3Rpb24sIGNoYW5uZWw/IDogc3RyaW5nKSB7XG4gICAgbmFtZXMuZm9yRWFjaCgobmFtZSkgPT4ge1xuICAgICAgY29uc3QgY2FsbGJhY2tzID0gdGhpcy5jYWxsYmFja3NbbmFtZV0gfHwgW107XG5cbiAgICAgIHRoaXMuY2FsbGJhY2tzW25hbWVdID0gY2FsbGJhY2tzLmZpbHRlcihcbiAgICAgICAgKGV4aXN0ZWRDYWxsYmFjazogSUNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgY29uc3QgaXNFcXVhbENhbGxiYWNrID0gY2FsbGJhY2sgJiYgY2FsbGJhY2sgPT09IGV4aXN0ZWRDYWxsYmFjay5mbjtcbiAgICAgICAgICBjb25zdCBpc0VxdWFsQ2hhbm5lbCA9IGNoYW5uZWwgJiYgY2hhbm5lbCA9PT0gZXhpc3RlZENhbGxiYWNrLmNoYW5uZWw7XG5cbiAgICAgICAgICByZXR1cm4gIWlzRXF1YWxDYWxsYmFjayAmJiAhaXNFcXVhbENoYW5uZWw7XG4gICAgICAgIH0sXG4gICAgICApO1xuICAgICAgaWYgKHRoaXMuY2FsbGJhY2tzW25hbWVdLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBkZWxldGUgdGhpcy5jYWxsYmFja3NbbmFtZV07XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIHJlbW92ZUFsbENhbGxiYWNrcyhuYW1lcyA6IHN0cmluZ1tdKSB7XG4gICAgbmFtZXMuZm9yRWFjaCgobmFtZSkgPT4ge1xuICAgICAgZGVsZXRlIHRoaXMuY2FsbGJhY2tzW25hbWVdO1xuICAgIH0pO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/callbackRegistry.ts\n");

/***/ }),

/***/ "./lib/channel.ts":
/*!************************!*\
  !*** ./lib/channel.ts ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Channel; });\n/* harmony import */ var _eventsDispatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eventsDispatcher */ \"./lib/eventsDispatcher.ts\");\n\nclass Channel extends _eventsDispatcher__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(name, socket) {\n        super();\n        this.name = name;\n        this.socket = socket;\n        this.subscribed = false;\n        this.subscriptionCancelled = false;\n    }\n    trigger(event, data) {\n        if (!this.subscribed) {\n            console.warn('Client event triggered before channel \\'subscription_succeeded\\' event');\n        }\n        return this.socket.sendEvent(event, data, this.name);\n    }\n    disconnect() {\n        this.subscribed = false;\n    }\n    join() {\n        if (this.subscribed)\n            return;\n        this.subscriptionCancelled = false;\n        this.subscribed = true;\n        this.socket.joinChannel(this.name);\n    }\n    subscribe(eventName, data) {\n        this.socket.subscribe(eventName, data, this.name);\n    }\n    unsubscribe(eventName, data) {\n        this.socket.unsubscribe(eventName, data, this.name);\n    }\n    leaveChannel() {\n        this.subscribed = false;\n        this.socket.leaveChannel(this.name);\n    }\n    cancelSubscription() {\n        this.subscriptionCancelled = true;\n    }\n    reinstateSubscription() {\n        this.subscriptionCancelled = false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9saWIvY2hhbm5lbC50cz9iZGY4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFrRDtBQUduQyxNQUFNLE9BQVEsU0FBUSx5REFBZ0I7SUFTbkQsWUFBWSxJQUFhLEVBQUUsTUFBZ0I7UUFDekMsS0FBSyxFQUFFLENBQUM7UUFFUixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztRQUN4QixJQUFJLENBQUMscUJBQXFCLEdBQUcsS0FBSyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxPQUFPLENBQUMsS0FBYyxFQUFFLElBQVU7UUFDaEMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDcEIsT0FBTyxDQUFDLElBQUksQ0FBQyx3RUFBd0UsQ0FBQyxDQUFDO1NBQ3hGO1FBQ0QsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBRUQsVUFBVTtRQUNSLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO0lBQzFCLENBQUM7SUFFRCxJQUFJO1FBQ0YsSUFBSSxJQUFJLENBQUMsVUFBVTtZQUFFLE9BQU87UUFDNUIsSUFBSSxDQUFDLHFCQUFxQixHQUFHLEtBQUssQ0FBQztRQUNuQyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUN2QixJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVELFNBQVMsQ0FBQyxTQUFpQixFQUFFLElBQVM7UUFDcEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVELFdBQVcsQ0FBQyxTQUFpQixFQUFFLElBQVM7UUFDdEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUVELFlBQVk7UUFDVixJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztRQUN4QixJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUVELGtCQUFrQjtRQUNoQixJQUFJLENBQUMscUJBQXFCLEdBQUcsSUFBSSxDQUFDO0lBQ3BDLENBQUM7SUFFRCxxQkFBcUI7UUFDbkIsSUFBSSxDQUFDLHFCQUFxQixHQUFHLEtBQUssQ0FBQztJQUNyQyxDQUFDO0NBQ0YiLCJmaWxlIjoiLi9saWIvY2hhbm5lbC50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFdmVudHNEaXNwYXRjaGVyIGZyb20gJy4vZXZlbnRzRGlzcGF0Y2hlcic7XG5pbXBvcnQgeyBTRlNvY2tldCB9IGZyb20gJy4vc2ZTb2NrZXQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDaGFubmVsIGV4dGVuZHMgRXZlbnRzRGlzcGF0Y2hlciB7XG4gIG5hbWU6IHN0cmluZztcblxuICBzb2NrZXQ6IFNGU29ja2V0O1xuXG4gIHN1YnNjcmliZWQ6IGJvb2xlYW47XG5cbiAgc3Vic2NyaXB0aW9uQ2FuY2VsbGVkOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKG5hbWUgOiBzdHJpbmcsIHNvY2tldDogU0ZTb2NrZXQpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLnNvY2tldCA9IHNvY2tldDtcbiAgICB0aGlzLnN1YnNjcmliZWQgPSBmYWxzZTtcbiAgICB0aGlzLnN1YnNjcmlwdGlvbkNhbmNlbGxlZCA9IGZhbHNlO1xuICB9XG5cbiAgdHJpZ2dlcihldmVudCA6IHN0cmluZywgZGF0YSA6IGFueSkgeyAvLyBUT0RPXG4gICAgaWYgKCF0aGlzLnN1YnNjcmliZWQpIHtcbiAgICAgIGNvbnNvbGUud2FybignQ2xpZW50IGV2ZW50IHRyaWdnZXJlZCBiZWZvcmUgY2hhbm5lbCBcXCdzdWJzY3JpcHRpb25fc3VjY2VlZGVkXFwnIGV2ZW50Jyk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZVxuICAgIH1cbiAgICByZXR1cm4gdGhpcy5zb2NrZXQuc2VuZEV2ZW50KGV2ZW50LCBkYXRhLCB0aGlzLm5hbWUpO1xuICB9XG5cbiAgZGlzY29ubmVjdCgpIHtcbiAgICB0aGlzLnN1YnNjcmliZWQgPSBmYWxzZTtcbiAgfVxuXG4gIGpvaW4oKSB7XG4gICAgaWYgKHRoaXMuc3Vic2NyaWJlZCkgcmV0dXJuO1xuICAgIHRoaXMuc3Vic2NyaXB0aW9uQ2FuY2VsbGVkID0gZmFsc2U7XG4gICAgdGhpcy5zdWJzY3JpYmVkID0gdHJ1ZTtcbiAgICB0aGlzLnNvY2tldC5qb2luQ2hhbm5lbCh0aGlzLm5hbWUpO1xuICB9XG5cbiAgc3Vic2NyaWJlKGV2ZW50TmFtZTogc3RyaW5nLCBkYXRhOiBhbnkpIHsgLy8gVE9ET1xuICAgIHRoaXMuc29ja2V0LnN1YnNjcmliZShldmVudE5hbWUsIGRhdGEsIHRoaXMubmFtZSk7XG4gIH1cblxuICB1bnN1YnNjcmliZShldmVudE5hbWU6IHN0cmluZywgZGF0YTogYW55KSB7IC8vIFRPRE9cbiAgICB0aGlzLnNvY2tldC51bnN1YnNjcmliZShldmVudE5hbWUsIGRhdGEsIHRoaXMubmFtZSk7XG4gIH1cblxuICBsZWF2ZUNoYW5uZWwoKSB7XG4gICAgdGhpcy5zdWJzY3JpYmVkID0gZmFsc2U7XG4gICAgdGhpcy5zb2NrZXQubGVhdmVDaGFubmVsKHRoaXMubmFtZSk7XG4gIH1cblxuICBjYW5jZWxTdWJzY3JpcHRpb24oKSB7XG4gICAgdGhpcy5zdWJzY3JpcHRpb25DYW5jZWxsZWQgPSB0cnVlO1xuICB9XG5cbiAgcmVpbnN0YXRlU3Vic2NyaXB0aW9uKCkge1xuICAgIHRoaXMuc3Vic2NyaXB0aW9uQ2FuY2VsbGVkID0gZmFsc2U7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/channel.ts\n");

/***/ }),

/***/ "./lib/connection.ts":
/*!***************************!*\
  !*** ./lib/connection.ts ***!
  \***************************/
/*! exports provided: decodeMessage, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decodeMessage\", function() { return decodeMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Connection; });\n/* harmony import */ var _eventsDispatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eventsDispatcher */ \"./lib/eventsDispatcher.ts\");\n\nconst systemSymbols = ['@'];\nconst decodeMessage = (messageEvent) => {\n    if (messageEvent) {\n        const messageData = JSON.parse(messageEvent);\n        const calcChannelName = (topic) => {\n            let resultTopic = topic;\n            systemSymbols.forEach((symbol) => {\n                if (topic && topic[0] === symbol) {\n                    resultTopic = '';\n                }\n            });\n            return String(resultTopic);\n        };\n        return {\n            type: 'sfSocket:message',\n            error: null,\n            data: messageData.payload || null,\n            context: {\n                ...(messageData.topic ? { channel: calcChannelName(messageData.topic) } : {}),\n            },\n        };\n    }\n    return {\n        type: 'MessageParseError',\n        error: `messageEvent: ${messageEvent} not contains data property`,\n        data: null,\n    };\n};\nconst encodeMessage = (event) => {\n    const sfEvent = {\n        cmd: event.type,\n        args: event.data,\n    };\n    return JSON.stringify(sfEvent);\n};\nconst prepareCloseAction = (closeEvent) => {\n    if (!closeEvent.context || !closeEvent.context.code) {\n        console.error('socket event do not contain close code');\n        return {\n            ...closeEvent,\n            error: 'connection refused',\n        };\n    }\n    if (closeEvent.context.code < 4000) {\n        if (closeEvent.context.code >= 1002 && closeEvent.context.code <= 1004) {\n            return {\n                ...closeEvent,\n                error: 'socket is unavailable',\n            };\n        }\n    }\n    return closeEvent;\n};\nclass Connection extends _eventsDispatcher__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(id, transport) {\n        super();\n        this.id = id;\n        this.transport = transport;\n        this.bindListeners();\n    }\n    send(data) {\n        if (!this.transport)\n            return false;\n        return this.transport.send(data);\n    }\n    sendEvent(name, data, channel) {\n        const event = {\n            type: name,\n            data,\n            error: null,\n        };\n        if (channel) {\n            event.context = { channel };\n        }\n        return this.send(encodeMessage(event));\n    }\n    close() {\n        if (this.transport) {\n            this.transport.close();\n        }\n    }\n    bindListeners() {\n        const unbindListeners = (listeners) => {\n            if (!this.transport)\n                return;\n            this.transport.unbind('message', listeners.message);\n            this.transport.unbind('error', listeners.error);\n            this.transport.unbind('closed', listeners.closed);\n        };\n        const listeners = {\n            message: (messageEvent) => {\n                let sfSocketEvent = null;\n                try {\n                    sfSocketEvent = decodeMessage(messageEvent.data);\n                }\n                catch (e) {\n                    this.emit('error', {\n                        type: 'MessageParseError',\n                        error: e,\n                        data: typeof messageEvent === 'string' ? messageEvent : JSON.stringify(messageEvent),\n                    });\n                }\n                if (sfSocketEvent) {\n                    if (sfSocketEvent.type === 'sfSocket:error') {\n                        this.emit('error', {\n                            type: 'sfSocket:error',\n                            data: sfSocketEvent.data,\n                            error: null,\n                        });\n                    }\n                    else {\n                        this.emit('message', sfSocketEvent);\n                    }\n                }\n            },\n            error: (error) => {\n                this.emit('error', {\n                    type: 'sfSocket:error',\n                    error,\n                    data: null,\n                });\n            },\n            closed: (closeEvent) => {\n                unbindListeners(listeners);\n                if (closeEvent && closeEvent.context && closeEvent.context.code) {\n                    this.handleCloseEvent(closeEvent);\n                }\n                this.transport = null;\n                this.emit('closed');\n            },\n        };\n        if (!this.transport)\n            return;\n        this.transport.bind('message', listeners.message);\n        this.transport.bind('error', listeners.error);\n        this.transport.bind('closed', listeners.closed);\n    }\n    handleCloseEvent(closeEvent) {\n        const action = prepareCloseAction(closeEvent);\n        if (action.type === 'sfSocket:closed') {\n            this.emit('close', action);\n        }\n        else {\n            this.emit('error', action);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/connection.ts\n");

/***/ }),

/***/ "./lib/connectionManager.ts":
/*!**********************************!*\
  !*** ./lib/connectionManager.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ConnectionManager; });\n/* harmony import */ var _eventsDispatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eventsDispatcher */ \"./lib/eventsDispatcher.ts\");\n/* harmony import */ var _transport__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transport */ \"./lib/transport.ts\");\n\n\nclass ConnectionManager extends _eventsDispatcher__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(options) {\n        super();\n        this.options = options || {};\n        this.state = 'initialized';\n        this.connection = null;\n        this.usingTLS = Boolean(options.useTLS);\n        this.errorCallbacks = this.buildErrorCallbacks();\n        this.connectionCallbacks = this.buildConnectionCallbacks(this.errorCallbacks);\n        this.transport = new _transport__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('ws', options);\n        this.runner = null;\n        this.unavailableTimer = 0;\n        this.retryTimer = 0;\n    }\n    connect() {\n        if (this.connection || this.runner) {\n            return;\n        }\n        this.updateState('connecting');\n        this.startConnecting();\n        this.setUnavailableTimer();\n    }\n    send(data) {\n        if (this.connection) {\n            return this.connection.send(data);\n        }\n        return false;\n    }\n    sendEvent(name, data, channel) {\n        if (this.connection) {\n            return this.connection.sendEvent(name, data, channel);\n        }\n        return false;\n    }\n    disconnect() {\n        this.disconnectInternally();\n        this.updateState('disconnected');\n    }\n    startConnecting() {\n        const callback = (error, connection) => {\n            if (error) {\n                this.runner = this.transport.connect(callback);\n            }\n            else {\n                this.abortConnecting();\n                this.clearUnavailableTimer();\n                this.setConnection(connection);\n                this.updateState('connected');\n            }\n        };\n        this.runner = this.transport.connect(callback);\n    }\n    abortConnecting() {\n        if (this.runner) {\n            this.runner.abort();\n            this.runner = null;\n        }\n    }\n    disconnectInternally() {\n        this.abortConnecting();\n        this.clearRetryTimer();\n        this.clearUnavailableTimer();\n        if (this.connection) {\n            const connection = this.abandonConnection();\n            if (connection)\n                connection.close();\n        }\n    }\n    retryIn(delay) {\n        if (delay > 0) {\n            this.emit('connecting', {\n                type: 'sfSocket:connecting',\n                data: String(Math.round(delay / 1000)),\n                error: null,\n            });\n        }\n        this.retryTimer = setTimeout(() => {\n            this.disconnectInternally();\n            this.connect();\n        }, delay || 0);\n    }\n    clearRetryTimer() {\n        if (this.retryTimer) {\n            if (this.retryTimer) {\n                clearTimeout(this.retryTimer);\n            }\n            this.retryTimer = 0;\n        }\n    }\n    setUnavailableTimer() {\n        this.unavailableTimer = setTimeout(() => {\n            this.updateState('unavailable');\n        }, this.options.unavailableTimeout);\n    }\n    clearUnavailableTimer() {\n        if (this.unavailableTimer) {\n            clearTimeout(this.unavailableTimer);\n        }\n        this.unavailableTimer = 0;\n    }\n    buildConnectionCallbacks(errorCallbacks) {\n        return {\n            ...errorCallbacks,\n            message: (socketEvent) => {\n                this.emit('message', socketEvent);\n            },\n            error: (errorEvent) => {\n                this.emit('error', errorEvent);\n            },\n            closed: (closeEvent) => {\n                this.abandonConnection();\n                if (this.shouldRetry()) {\n                    this.retryIn(1000);\n                }\n                this.emit('closed', closeEvent);\n            },\n        };\n    }\n    buildErrorCallbacks() {\n        const withErrorEmitted = (callback) => (result) => {\n            if (result.error) {\n                this.emit('error', {\n                    type: 'sfSocket:error',\n                    data: null,\n                    error: result.error,\n                });\n            }\n            callback(result);\n        };\n        return {\n            refused: withErrorEmitted(() => {\n                this.disconnect();\n            }),\n            unavailable: withErrorEmitted(() => {\n                this.retryIn(1000);\n            }),\n        };\n    }\n    setConnection(connection) {\n        this.connection = connection;\n        if (!this.connection) {\n            return;\n        }\n        this.connection.bind('message', this.connectionCallbacks.message);\n        this.connection.bind('error', this.connectionCallbacks.error);\n        this.connection.bind('closed', this.connectionCallbacks.closed);\n    }\n    abandonConnection() {\n        if (!this.connection) {\n            return null;\n        }\n        this.connection.unbind('message', this.connectionCallbacks.message);\n        this.connection.unbind('error', this.connectionCallbacks.error);\n        this.connection.unbind('closed', this.connectionCallbacks.closed);\n        const { connection } = this;\n        this.connection = null;\n        return connection;\n    }\n    updateState(newState) {\n        const previousState = this.state;\n        this.state = newState;\n        if (previousState !== newState) {\n            this.emit(newState);\n        }\n    }\n    shouldRetry() {\n        return this.state === 'connecting' || this.state === 'connected';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/connectionManager.ts\n");

/***/ }),

/***/ "./lib/eventsDispatcher.ts":
/*!*********************************!*\
  !*** ./lib/eventsDispatcher.ts ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return EventsDispatcher; });\n/* harmony import */ var _callbackRegistry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./callbackRegistry */ \"./lib/callbackRegistry.ts\");\n\nclass EventsDispatcher {\n    constructor() {\n        this.callbacks = new _callbackRegistry__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    }\n    bind(eventName, callback, channel) {\n        this.callbacks.add(eventName, callback, channel);\n        return this;\n    }\n    unbind(eventName, callback, channel) {\n        this.callbacks.remove(eventName, callback, channel);\n        return this;\n    }\n    emit(eventName, event) {\n        const callbacks = this.callbacks.get(eventName);\n        const channelEvent = event && event.context\n            ? event.context.channel\n            : null;\n        const hasCallbacks = callbacks && callbacks.length > 0;\n        if (hasCallbacks) {\n            callbacks.forEach((callback) => {\n                const isChannelCallback = callback.channel === channelEvent;\n                const isGlobalCallback = !callback.channel || !channelEvent;\n                if (isGlobalCallback || isChannelCallback) {\n                    callback.fn(event);\n                }\n            });\n        }\n        return this;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9saWIvZXZlbnRzRGlzcGF0Y2hlci50cz80NWM0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFrRDtBQUluQyxNQUFNLGdCQUFnQjtJQUduQztRQUNFLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSx5REFBZ0IsRUFBRSxDQUFDO0lBQzFDLENBQUM7SUFFRCxJQUFJLENBQUMsU0FBa0IsRUFBRSxRQUFtQixFQUFFLE9BQWdCO1FBQzVELElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDakQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsTUFBTSxDQUFDLFNBQWtCLEVBQUUsUUFBbUIsRUFBRSxPQUFnQjtRQUM5RCxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3BELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELElBQUksQ0FBQyxTQUFrQixFQUFFLEtBQXNCO1FBQzdDLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRWhELE1BQU0sWUFBWSxHQUE4QixLQUFLLElBQUksS0FBSyxDQUFDLE9BQU87WUFDcEUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTztZQUN2QixDQUFDLENBQUMsSUFBSSxDQUFDO1FBRVQsTUFBTSxZQUFZLEdBQUcsU0FBUyxJQUFJLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBRXZELElBQUksWUFBWSxFQUFFO1lBQ2hCLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRTtnQkFDN0IsTUFBTSxpQkFBaUIsR0FBRyxRQUFRLENBQUMsT0FBTyxLQUFLLFlBQVksQ0FBQztnQkFDNUQsTUFBTSxnQkFBZ0IsR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7Z0JBRTVELElBQUksZ0JBQWdCLElBQUksaUJBQWlCLEVBQUU7b0JBQ3pDLFFBQVEsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7aUJBQ3BCO1lBQ0gsQ0FBQyxDQUFDLENBQUM7U0FDSjtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztDQUNGIiwiZmlsZSI6Ii4vbGliL2V2ZW50c0Rpc3BhdGNoZXIudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2FsbGJhY2tSZWdpc3RyeSBmcm9tICcuL2NhbGxiYWNrUmVnaXN0cnknO1xuaW1wb3J0IHsgSVNGU29ja2V0RXZlbnQgfSBmcm9tICcuL3NmU29ja2V0JztcblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFdmVudHNEaXNwYXRjaGVyIHtcbiAgY2FsbGJhY2tzOiBDYWxsYmFja1JlZ2lzdHJ5O1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuY2FsbGJhY2tzID0gbmV3IENhbGxiYWNrUmVnaXN0cnkoKTtcbiAgfVxuXG4gIGJpbmQoZXZlbnROYW1lIDogc3RyaW5nLCBjYWxsYmFjayA6IEZ1bmN0aW9uLCBjaGFubmVsPzogc3RyaW5nKSB7XG4gICAgdGhpcy5jYWxsYmFja3MuYWRkKGV2ZW50TmFtZSwgY2FsbGJhY2ssIGNoYW5uZWwpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgdW5iaW5kKGV2ZW50TmFtZSA6IHN0cmluZywgY2FsbGJhY2sgOiBGdW5jdGlvbiwgY2hhbm5lbD86IHN0cmluZykge1xuICAgIHRoaXMuY2FsbGJhY2tzLnJlbW92ZShldmVudE5hbWUsIGNhbGxiYWNrLCBjaGFubmVsKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGVtaXQoZXZlbnROYW1lIDogc3RyaW5nLCBldmVudD86IElTRlNvY2tldEV2ZW50KSA6IEV2ZW50c0Rpc3BhdGNoZXIge1xuICAgIGNvbnN0IGNhbGxiYWNrcyA9IHRoaXMuY2FsbGJhY2tzLmdldChldmVudE5hbWUpO1xuXG4gICAgY29uc3QgY2hhbm5lbEV2ZW50OiBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkID0gZXZlbnQgJiYgZXZlbnQuY29udGV4dFxuICAgICAgPyBldmVudC5jb250ZXh0LmNoYW5uZWxcbiAgICAgIDogbnVsbDtcblxuICAgIGNvbnN0IGhhc0NhbGxiYWNrcyA9IGNhbGxiYWNrcyAmJiBjYWxsYmFja3MubGVuZ3RoID4gMDtcblxuICAgIGlmIChoYXNDYWxsYmFja3MpIHtcbiAgICAgIGNhbGxiYWNrcy5mb3JFYWNoKChjYWxsYmFjaykgPT4ge1xuICAgICAgICBjb25zdCBpc0NoYW5uZWxDYWxsYmFjayA9IGNhbGxiYWNrLmNoYW5uZWwgPT09IGNoYW5uZWxFdmVudDtcbiAgICAgICAgY29uc3QgaXNHbG9iYWxDYWxsYmFjayA9ICFjYWxsYmFjay5jaGFubmVsIHx8ICFjaGFubmVsRXZlbnQ7XG5cbiAgICAgICAgaWYgKGlzR2xvYmFsQ2FsbGJhY2sgfHwgaXNDaGFubmVsQ2FsbGJhY2spIHtcbiAgICAgICAgICBjYWxsYmFjay5mbihldmVudCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/eventsDispatcher.ts\n");

/***/ }),

/***/ "./lib/index.ts":
/*!**********************!*\
  !*** ./lib/index.ts ***!
  \**********************/
/*! exports provided: SFSocket, makeSocketOptions, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeSocketOptions\", function() { return makeSocketOptions; });\n/* harmony import */ var _sfSocket__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sfSocket */ \"./lib/sfSocket.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SFSocket\", function() { return _sfSocket__WEBPACK_IMPORTED_MODULE_0__[\"SFSocket\"]; });\n\n\nconst makeSocketOptions = (wsUrl) => {\n    const url = new URL(wsUrl);\n    const urlProtocol = url.protocol ? url.protocol.replace(':', '') : null;\n    if (url.hostname && url.port && urlProtocol) {\n        return {\n            host: url.hostname,\n            port: url.port,\n            path: urlProtocol,\n        };\n    }\n    return null;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_sfSocket__WEBPACK_IMPORTED_MODULE_0__[\"SFSocket\"]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9saWIvaW5kZXgudHM/NGQ4NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXNDO0FBRXRDLE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxLQUFhLEVBQUUsRUFBRTtJQUMxQyxNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQixNQUFNLFdBQVcsR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUV4RSxJQUFJLEdBQUcsQ0FBQyxRQUFRLElBQUksR0FBRyxDQUFDLElBQUksSUFBSSxXQUFXLEVBQUU7UUFDM0MsT0FBTztZQUNMLElBQUksRUFBRSxHQUFHLENBQUMsUUFBUTtZQUNsQixJQUFJLEVBQUUsR0FBRyxDQUFDLElBQUk7WUFDZCxJQUFJLEVBQUUsV0FBVztTQUNsQixDQUFDO0tBQ0g7SUFFRCxPQUFPLElBQUksQ0FBQztBQUNkLENBQUMsQ0FBQztBQUdxQztBQUN4QixpSEFBUSxFQUFDIiwiZmlsZSI6Ii4vbGliL2luZGV4LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU0ZTb2NrZXQgfSBmcm9tICcuL3NmU29ja2V0JztcblxuY29uc3QgbWFrZVNvY2tldE9wdGlvbnMgPSAod3NVcmw6IHN0cmluZykgPT4ge1xuICBjb25zdCB1cmwgPSBuZXcgVVJMKHdzVXJsKTtcbiAgY29uc3QgdXJsUHJvdG9jb2wgPSB1cmwucHJvdG9jb2wgPyB1cmwucHJvdG9jb2wucmVwbGFjZSgnOicsICcnKSA6IG51bGw7XG5cbiAgaWYgKHVybC5ob3N0bmFtZSAmJiB1cmwucG9ydCAmJiB1cmxQcm90b2NvbCkge1xuICAgIHJldHVybiB7XG4gICAgICBob3N0OiB1cmwuaG9zdG5hbWUsIC8vIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICAgICAgcG9ydDogdXJsLnBvcnQsIC8vIHBvcnQ6ICc4MDgwJyxcbiAgICAgIHBhdGg6IHVybFByb3RvY29sLCAvLyBwYXRoOiAnd3MnLFxuICAgIH07XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn07XG5cblxuZXhwb3J0IHsgU0ZTb2NrZXQsIG1ha2VTb2NrZXRPcHRpb25zIH07XG5leHBvcnQgZGVmYXVsdCBTRlNvY2tldDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/index.ts\n");

/***/ }),

/***/ "./lib/sfSocket.ts":
/*!*************************!*\
  !*** ./lib/sfSocket.ts ***!
  \*************************/
/*! exports provided: SFSocket */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SFSocket\", function() { return SFSocket; });\n/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./channel */ \"./lib/channel.ts\");\n/* harmony import */ var _eventsDispatcher__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./eventsDispatcher */ \"./lib/eventsDispatcher.ts\");\n/* harmony import */ var _connectionManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./connectionManager */ \"./lib/connectionManager.ts\");\n\n\n\nconst STORAGE_KEY = 'sfsocket_storage';\nconst CONNECTION_EVENTS = {\n    JOIN: 'join',\n    LEAVE: 'leave',\n};\nconst defaultConfig = {\n    host: '',\n    port: 80,\n    portTLS: 443,\n    path: '',\n    unavailableTimeout: 10000,\n    useTLS: false,\n    useStorage: false,\n};\nclass SFSocket {\n    constructor(options) {\n        if (!options || typeof options !== 'object') {\n            throw new Error('sfSocket options should be an object');\n        }\n        const constructorOptions = options || {};\n        this.config = {\n            ...defaultConfig,\n            ...constructorOptions,\n        };\n        this.channels = {};\n        this.eventsDispatcher = new _eventsDispatcher__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n        this.hasStorage = Boolean(this.config.useStorage && window && window.localStorage);\n        this.connection = new _connectionManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.config);\n        this.connection.bind('connected', () => {\n            Object.keys(this.channels).forEach((channelName) => {\n                this.subscribeChannel(channelName);\n            });\n        });\n        this.connection.bind('message', (event) => {\n            this.eventsDispatcher.emit('message', event);\n        });\n        this.connection.bind('connecting', () => {\n            this.channelsDisconnect();\n        });\n        this.connection.bind('disconnected', () => {\n            this.channelsDisconnect();\n        });\n        this.connection.bind('error', (err) => {\n            console.error(err);\n        });\n        SFSocket.instances.push(this);\n        if (SFSocket.isReady) {\n            this.connect();\n        }\n        if (this.hasStorage) {\n            const activeChannels = this.getStorage();\n            if (activeChannels) {\n                activeChannels.forEach((channelName) => {\n                    this.subscribeChannel(channelName);\n                });\n            }\n        }\n    }\n    static ready() {\n        SFSocket.isReady = true;\n        SFSocket.instances.forEach((instance) => {\n            instance.connect();\n        });\n    }\n    connect() {\n        this.connection.connect();\n    }\n    disconnect() {\n        this.connection.disconnect();\n    }\n    sendEvent(eventName, data, channel) {\n        return this.connection.sendEvent(eventName, data, channel);\n    }\n    join(data) {\n        return this.sendEvent(CONNECTION_EVENTS.JOIN, data);\n    }\n    leave(data) {\n        return this.sendEvent(CONNECTION_EVENTS.LEAVE, data);\n    }\n    listen(channelsNames) {\n        channelsNames.forEach((channelsName) => {\n            if (this.connection.state === 'connected') {\n                this.joinChannel(channelsName);\n            }\n            else {\n                this.subscribeChannel(channelsName);\n            }\n        });\n    }\n    stopListen(channelNames) {\n        channelNames.forEach((channelName) => {\n            const removedChannel = this.removeChannel(channelName);\n            if (removedChannel && this.connection.state === 'connected') {\n                removedChannel.leaveChannel();\n            }\n        });\n    }\n    subscribe(eventName, data, channel) {\n        return this.connection.bind(eventName, data, channel);\n    }\n    unsubscribe(eventName, data, channel) {\n        return this.connection.unbind(eventName, data, channel);\n    }\n    channel(channelName) {\n        return this.subscribeChannel(channelName);\n    }\n    addChannel(name, socket) {\n        if (!this.channels[name]) {\n            this.channels[name] = new _channel__WEBPACK_IMPORTED_MODULE_0__[\"default\"](name, socket);\n        }\n        return this.channels[name];\n    }\n    joinChannel(chanelName) {\n        this.addStorageChannel(chanelName);\n        return this.sendEvent(CONNECTION_EVENTS.JOIN, [chanelName]);\n    }\n    leaveChannel(chanelName) {\n        this.removeStorageChannel(chanelName);\n        return this.sendEvent(CONNECTION_EVENTS.LEAVE, [chanelName]);\n    }\n    findChannel(name) {\n        return this.channels[name];\n    }\n    removeChannel(name) {\n        const channel = this.channels[name];\n        delete this.channels[name];\n        return channel;\n    }\n    channelsDisconnect() {\n        Object.values(this.channels).forEach((channel) => channel.disconnect());\n    }\n    subscribeChannel(channelName) {\n        const channel = this.addChannel(channelName, this);\n        if (channel.subscriptionCancelled) {\n            channel.reinstateSubscription();\n        }\n        else if (this.connection.state === 'connected') {\n            channel.join();\n        }\n        return channel;\n    }\n    getStorage() {\n        if (this.hasStorage) {\n            const storageData = window.localStorage.getItem(STORAGE_KEY);\n            return storageData ? JSON.parse(storageData) : null;\n        }\n        return null;\n    }\n    addStorageChannel(channelName) {\n        if (this.hasStorage) {\n            const activeStorageChannels = this.getStorage();\n            if (activeStorageChannels) {\n                const activeChannels = activeStorageChannels.filter((channel) => channel !== channelName);\n                activeChannels.push(channelName);\n                this.setStorage(activeChannels);\n            }\n            else {\n                this.setStorage([channelName]);\n            }\n        }\n    }\n    removeStorageChannel(channelName) {\n        if (this.hasStorage) {\n            const activeStorage = this.getStorage();\n            if (activeStorage) {\n                const currentData = activeStorage.filter((channel) => channel !== channelName);\n                if (currentData.length) {\n                    this.setStorage(currentData);\n                }\n                else {\n                    this.clearStorage();\n                }\n            }\n        }\n    }\n    setStorage(args) {\n        if (this.hasStorage) {\n            return window.localStorage.setItem(STORAGE_KEY, JSON.stringify(args));\n        }\n        return null;\n    }\n    clearStorage() {\n        if (this.hasStorage) {\n            return window.localStorage.removeItem(STORAGE_KEY);\n        }\n        return null;\n    }\n}\nSFSocket.instances = [];\nSFSocket.isReady = false;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/sfSocket.ts\n");

/***/ }),

/***/ "./lib/transport.ts":
/*!**************************!*\
  !*** ./lib/transport.ts ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Transport; });\n/* harmony import */ var _connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./connection */ \"./lib/connection.ts\");\n/* harmony import */ var _transportConnection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transportConnection */ \"./lib/transportConnection.ts\");\n\n\nclass Transport {\n    constructor(name, options) {\n        this.options = options || {};\n        const scheme = `ws${options.useTLS ? 's' : ''}`;\n        const host = options.useTLS ? (`${options.host}:${options.portTLS}`) : (`${options.host}:${options.port}`);\n        const url = `${scheme}://${host}/${options.path}`;\n        this.hooks = {\n            url,\n            isInitialized() {\n                return Boolean(window.WebSocket);\n            },\n            getSocket(socketUrl) {\n                const Constructor = window.WebSocket;\n                return new Constructor(socketUrl);\n            },\n        };\n        this.name = name;\n    }\n    connect(callback) {\n        let connected = false;\n        const transport = new _transportConnection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.hooks, this.name);\n        const onInitialized = () => {\n            transport.unbind('initialized', onInitialized);\n            transport.connect();\n        };\n        const unbindListeners = () => {\n            transport.unbind('initialized', onInitialized);\n            transport.unbind('open', onOpen);\n            transport.unbind('error', onError);\n            transport.unbind('closed', onClosed);\n        };\n        const onOpen = () => {\n            connected = true;\n            unbindListeners();\n            const result = new _connection__WEBPACK_IMPORTED_MODULE_0__[\"default\"]('', transport);\n            callback(null, result);\n        };\n        const onError = (error) => {\n            unbindListeners();\n            callback(error);\n        };\n        const onClosed = () => {\n            unbindListeners();\n        };\n        transport.bind('initialized', onInitialized);\n        transport.bind('open', onOpen);\n        transport.bind('error', onError);\n        transport.bind('closed', onClosed);\n        transport.initialize();\n        return {\n            abort: () => {\n                if (connected) {\n                    return;\n                }\n                unbindListeners();\n                transport.close();\n            },\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9saWIvdHJhbnNwb3J0LnRzPzBjMWEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBc0M7QUFDc0M7QUFXN0QsTUFBTSxTQUFTO0lBTzVCLFlBQVksSUFBWSxFQUFFLE9BQXdCO1FBQ2hELElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxJQUFJLEVBQUUsQ0FBQztRQUU3QixNQUFNLE1BQU0sR0FBRyxLQUFLLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUM7UUFDaEQsTUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsSUFBSSxJQUFJLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBRTNHLE1BQU0sR0FBRyxHQUFHLEdBQUcsTUFBTSxNQUFNLElBQUksSUFBSSxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7UUFFbEQsSUFBSSxDQUFDLEtBQUssR0FBRztZQUNYLEdBQUc7WUFDSCxhQUFhO2dCQUNYLE9BQU8sT0FBTyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQTZCLENBQUM7WUFDL0QsQ0FBQztZQUNELFNBQVMsQ0FBQyxTQUFTO2dCQUNqQixNQUFNLFdBQVcsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUE2QjtnQkFDakUsT0FBTyxJQUFJLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUNwQyxDQUFDO1NBQ0YsQ0FBQztRQUNGLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7SUFFRCxPQUFPLENBQUMsUUFBa0I7UUFDeEIsSUFBSSxTQUFTLEdBQUcsS0FBSyxDQUFDO1FBRXRCLE1BQU0sU0FBUyxHQUFHLElBQUksNERBQW1CLENBQ3ZDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FDdEIsQ0FBQztRQUVGLE1BQU0sYUFBYSxHQUFHLEdBQUcsRUFBRTtZQUN6QixTQUFTLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxhQUFhLENBQUMsQ0FBQztZQUMvQyxTQUFTLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDdEIsQ0FBQyxDQUFDO1FBRUYsTUFBTSxlQUFlLEdBQUcsR0FBRyxFQUFFO1lBQzNCLFNBQVMsQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLGFBQWEsQ0FBQyxDQUFDO1lBQy9DLFNBQVMsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBQ2pDLFNBQVMsQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBQ25DLFNBQVMsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQ3ZDLENBQUMsQ0FBQztRQUVGLE1BQU0sTUFBTSxHQUFHLEdBQUcsRUFBRTtZQUNsQixTQUFTLEdBQUcsSUFBSSxDQUFDO1lBQ2pCLGVBQWUsRUFBRSxDQUFDO1lBQ2xCLE1BQU0sTUFBTSxHQUFHLElBQUksbURBQVUsQ0FBQyxFQUFFLEVBQUUsU0FBUyxDQUFDLENBQUM7WUFDN0MsUUFBUSxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztRQUN6QixDQUFDLENBQUM7UUFFRixNQUFNLE9BQU8sR0FBRyxDQUFDLEtBQVUsRUFBRSxFQUFFO1lBQzdCLGVBQWUsRUFBRSxDQUFDO1lBQ2xCLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNsQixDQUFDLENBQUM7UUFDRixNQUFNLFFBQVEsR0FBRyxHQUFHLEVBQUU7WUFDcEIsZUFBZSxFQUFFLENBQUM7UUFDcEIsQ0FBQyxDQUFDO1FBRUYsU0FBUyxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsYUFBYSxDQUFDLENBQUM7UUFDN0MsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDL0IsU0FBUyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDakMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFFbkMsU0FBUyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBRXZCLE9BQU87WUFDTCxLQUFLLEVBQUUsR0FBRyxFQUFFO2dCQUNWLElBQUksU0FBUyxFQUFFO29CQUNiLE9BQU87aUJBQ1I7Z0JBQ0QsZUFBZSxFQUFFLENBQUM7Z0JBQ2xCLFNBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNwQixDQUFDO1NBQ0YsQ0FBQztJQUNKLENBQUM7Q0FDRiIsImZpbGUiOiIuL2xpYi90cmFuc3BvcnQudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29ubmVjdGlvbiBmcm9tICcuL2Nvbm5lY3Rpb24nO1xuaW1wb3J0IFRyYW5zcG9ydENvbm5lY3Rpb24sIHsgVHJhbnNwb3J0SG9va3MgfSBmcm9tICcuL3RyYW5zcG9ydENvbm5lY3Rpb24nO1xuaW1wb3J0IHsgSVNGU29ja2V0Q29uZmlnIH0gZnJvbSAnLi9zZlNvY2tldCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVJ1bm5lciB7XG4gIGFib3J0OiAoKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElUcmFuc3BvcnQge1xuICBjb25uZWN0KGNhbGxiYWNrOiBGdW5jdGlvbik6IElSdW5uZXI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRyYW5zcG9ydCBpbXBsZW1lbnRzIElUcmFuc3BvcnQge1xuICBob29rczogVHJhbnNwb3J0SG9va3M7XG5cbiAgbmFtZTogc3RyaW5nO1xuXG4gIG9wdGlvbnM6IElTRlNvY2tldENvbmZpZztcblxuICBjb25zdHJ1Y3RvcihuYW1lOiBzdHJpbmcsIG9wdGlvbnM6IElTRlNvY2tldENvbmZpZykge1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgICBjb25zdCBzY2hlbWUgPSBgd3Mke29wdGlvbnMudXNlVExTID8gJ3MnIDogJyd9YDtcbiAgICBjb25zdCBob3N0ID0gb3B0aW9ucy51c2VUTFMgPyAoYCR7b3B0aW9ucy5ob3N0fToke29wdGlvbnMucG9ydFRMU31gKSA6IChgJHtvcHRpb25zLmhvc3R9OiR7b3B0aW9ucy5wb3J0fWApO1xuXG4gICAgY29uc3QgdXJsID0gYCR7c2NoZW1lfTovLyR7aG9zdH0vJHtvcHRpb25zLnBhdGh9YDtcblxuICAgIHRoaXMuaG9va3MgPSB7XG4gICAgICB1cmwsXG4gICAgICBpc0luaXRpYWxpemVkKCkge1xuICAgICAgICByZXR1cm4gQm9vbGVhbih3aW5kb3cuV2ViU29ja2V0LyogfHwgd2luZG93Lk1veldlYlNvY2tldCAqLyk7XG4gICAgICB9LFxuICAgICAgZ2V0U29ja2V0KHNvY2tldFVybCkge1xuICAgICAgICBjb25zdCBDb25zdHJ1Y3RvciA9IHdpbmRvdy5XZWJTb2NrZXQvKiB8fCB3aW5kb3cuTW96V2ViU29ja2V0ICovO1xuICAgICAgICByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHNvY2tldFVybCk7XG4gICAgICB9LFxuICAgIH07XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgfVxuXG4gIGNvbm5lY3QoY2FsbGJhY2s6IEZ1bmN0aW9uKSB7XG4gICAgbGV0IGNvbm5lY3RlZCA9IGZhbHNlO1xuXG4gICAgY29uc3QgdHJhbnNwb3J0ID0gbmV3IFRyYW5zcG9ydENvbm5lY3Rpb24oXG4gICAgICB0aGlzLmhvb2tzLCB0aGlzLm5hbWUsXG4gICAgKTtcblxuICAgIGNvbnN0IG9uSW5pdGlhbGl6ZWQgPSAoKSA9PiB7XG4gICAgICB0cmFuc3BvcnQudW5iaW5kKCdpbml0aWFsaXplZCcsIG9uSW5pdGlhbGl6ZWQpO1xuICAgICAgdHJhbnNwb3J0LmNvbm5lY3QoKTtcbiAgICB9O1xuXG4gICAgY29uc3QgdW5iaW5kTGlzdGVuZXJzID0gKCkgPT4ge1xuICAgICAgdHJhbnNwb3J0LnVuYmluZCgnaW5pdGlhbGl6ZWQnLCBvbkluaXRpYWxpemVkKTtcbiAgICAgIHRyYW5zcG9ydC51bmJpbmQoJ29wZW4nLCBvbk9wZW4pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVzZS1iZWZvcmUtZGVmaW5lXG4gICAgICB0cmFuc3BvcnQudW5iaW5kKCdlcnJvcicsIG9uRXJyb3IpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVzZS1iZWZvcmUtZGVmaW5lXG4gICAgICB0cmFuc3BvcnQudW5iaW5kKCdjbG9zZWQnLCBvbkNsb3NlZCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgICB9O1xuXG4gICAgY29uc3Qgb25PcGVuID0gKCkgPT4ge1xuICAgICAgY29ubmVjdGVkID0gdHJ1ZTtcbiAgICAgIHVuYmluZExpc3RlbmVycygpO1xuICAgICAgY29uc3QgcmVzdWx0ID0gbmV3IENvbm5lY3Rpb24oJycsIHRyYW5zcG9ydCk7XG4gICAgICBjYWxsYmFjayhudWxsLCByZXN1bHQpO1xuICAgIH07XG5cbiAgICBjb25zdCBvbkVycm9yID0gKGVycm9yOiBhbnkpID0+IHsgLy8gVE9ET1xuICAgICAgdW5iaW5kTGlzdGVuZXJzKCk7XG4gICAgICBjYWxsYmFjayhlcnJvcik7XG4gICAgfTtcbiAgICBjb25zdCBvbkNsb3NlZCA9ICgpID0+IHtcbiAgICAgIHVuYmluZExpc3RlbmVycygpO1xuICAgIH07XG5cbiAgICB0cmFuc3BvcnQuYmluZCgnaW5pdGlhbGl6ZWQnLCBvbkluaXRpYWxpemVkKTtcbiAgICB0cmFuc3BvcnQuYmluZCgnb3BlbicsIG9uT3Blbik7XG4gICAgdHJhbnNwb3J0LmJpbmQoJ2Vycm9yJywgb25FcnJvcik7XG4gICAgdHJhbnNwb3J0LmJpbmQoJ2Nsb3NlZCcsIG9uQ2xvc2VkKTtcblxuICAgIHRyYW5zcG9ydC5pbml0aWFsaXplKCk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgYWJvcnQ6ICgpID0+IHtcbiAgICAgICAgaWYgKGNvbm5lY3RlZCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB1bmJpbmRMaXN0ZW5lcnMoKTtcbiAgICAgICAgdHJhbnNwb3J0LmNsb3NlKCk7XG4gICAgICB9LFxuICAgIH07XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/transport.ts\n");

/***/ }),

/***/ "./lib/transportConnection.ts":
/*!************************************!*\
  !*** ./lib/transportConnection.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TransportConnection; });\n/* harmony import */ var _eventsDispatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eventsDispatcher */ \"./lib/eventsDispatcher.ts\");\n\nclass TransportConnection extends _eventsDispatcher__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(hooks, name) {\n        super();\n        this.initialize = () => {\n            const self = this;\n            if (self.hooks.isInitialized()) {\n                self.changeState('initialized');\n            }\n            else {\n                self.onClose();\n            }\n        };\n        this.hooks = hooks;\n        this.name = name;\n        this.state = 'new';\n    }\n    connect() {\n        if (this.socket || this.state !== 'initialized') {\n            return false;\n        }\n        const { url } = this.hooks;\n        try {\n            this.socket = this.hooks.getSocket(url);\n        }\n        catch (e) {\n            setTimeout(() => {\n                this.onError(e);\n                this.changeState('closed');\n            });\n            return false;\n        }\n        this.bindListeners();\n        this.changeState('connecting');\n        return true;\n    }\n    close() {\n        if (this.socket) {\n            this.socket.close();\n            return true;\n        }\n        return false;\n    }\n    send(data) {\n        if (this.state === 'open') {\n            setTimeout(() => {\n                if (this.socket) {\n                    this.socket.send(data);\n                }\n            });\n            return true;\n        }\n        return false;\n    }\n    unbindListeners() {\n        if (!this.socket)\n            return;\n        this.socket.onopen = null;\n        this.socket.onerror = null;\n        this.socket.onclose = null;\n        this.socket.onmessage = null;\n    }\n    onOpen() {\n        this.changeState('open');\n        if (!this.socket)\n            return;\n        this.socket.onopen = null;\n    }\n    onError(error) {\n        this.emit('error', {\n            type: 'sfSocket:error',\n            error: error || 'websocket connection error',\n            data: null,\n        });\n    }\n    onClose(closeEvent) {\n        if (closeEvent) {\n            this.changeState('closed', {\n                type: closeEvent.wasClean ? 'sfSocket:closed' : 'sfSocket:error',\n                data: closeEvent.wasClean ? closeEvent.reason : null,\n                error: closeEvent.wasClean ? null : closeEvent.reason,\n                context: {\n                    code: closeEvent.code,\n                },\n            });\n        }\n        else {\n            this.changeState('closed');\n        }\n        this.unbindListeners();\n        this.socket = undefined;\n    }\n    onMessage(message) {\n        this.emit('message', {\n            type: 'sfSocket:message',\n            data: typeof message.data === 'string' ? message.data : JSON.stringify(message.data),\n            error: null,\n        });\n    }\n    bindListeners() {\n        if (!this.socket)\n            return;\n        this.socket.onopen = () => {\n            this.onOpen();\n        };\n        this.socket.onerror = () => {\n            this.onError();\n        };\n        this.socket.onclose = (closeEvent) => {\n            this.onClose(closeEvent);\n        };\n        this.socket.onmessage = (message) => {\n            this.onMessage(message);\n        };\n    }\n    changeState(state, params) {\n        this.state = state;\n        this.emit(state, params);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9saWIvdHJhbnNwb3J0Q29ubmVjdGlvbi50cz8yYTEyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFrRDtBQVNuQyxNQUFNLG1CQUFvQixTQUFRLHlEQUFnQjtJQVcvRCxZQUFZLEtBQXNCLEVBQUUsSUFBYTtRQUMvQyxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxVQUFVLEdBQUcsR0FBRyxFQUFFO1lBQ3JCLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQztZQUVsQixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxFQUFFLEVBQUU7Z0JBQzlCLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLENBQUM7YUFDakM7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO2FBQ2hCO1FBQ0gsQ0FBQyxDQUFDO1FBQ0YsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFFakIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDckIsQ0FBQztJQUVELE9BQU87UUFDTCxJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLEtBQUssS0FBSyxhQUFhLEVBQUU7WUFDL0MsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUVELE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQzNCLElBQUk7WUFDRixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ3pDO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFFVixVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUNkLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hCLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDN0IsQ0FBQyxDQUFDLENBQUM7WUFDSCxPQUFPLEtBQUssQ0FBQztTQUNkO1FBRUQsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDL0IsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBTUQsS0FBSztRQUNILElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNmLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDcEIsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVELElBQUksQ0FBQyxJQUFVO1FBQ2IsSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLE1BQU0sRUFBRTtZQUV6QixVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUNkLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtvQkFDZixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztpQkFDeEI7WUFDSCxDQUFDLENBQUMsQ0FBQztZQUNILE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFTyxlQUFlO1FBQ3JCLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTTtZQUFFLE9BQU87UUFDekIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQzFCLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUMzQixJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDM0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO0lBQy9CLENBQUM7SUFHTyxNQUFNO1FBQ1osSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN6QixJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU07WUFBRSxPQUFPO1FBQ3pCLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztJQUM1QixDQUFDO0lBRU8sT0FBTyxDQUFDLEtBQWM7UUFDNUIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDakIsSUFBSSxFQUFFLGdCQUFnQjtZQUN0QixLQUFLLEVBQUUsS0FBSyxJQUFJLDRCQUE0QjtZQUM1QyxJQUFJLEVBQUUsSUFBSTtTQUNYLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTyxPQUFPLENBQUMsVUFBdUI7UUFDckMsSUFBSSxVQUFVLEVBQUU7WUFDZCxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsRUFBRTtnQkFDekIsSUFBSSxFQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxnQkFBZ0I7Z0JBQ2hFLElBQUksRUFBRSxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJO2dCQUNwRCxLQUFLLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsTUFBTTtnQkFDckQsT0FBTyxFQUFFO29CQUNQLElBQUksRUFBRSxVQUFVLENBQUMsSUFBSTtpQkFDdEI7YUFDRixDQUFDLENBQUM7U0FDSjthQUFNO1lBQ0wsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUM1QjtRQUNELElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQztJQUMxQixDQUFDO0lBRU8sU0FBUyxDQUFDLE9BQXFCO1FBQ3JDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ25CLElBQUksRUFBRSxrQkFBa0I7WUFDeEIsSUFBSSxFQUFFLE9BQU8sT0FBTyxDQUFDLElBQUksS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztZQUNwRixLQUFLLEVBQUUsSUFBSTtTQUNaLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTyxhQUFhO1FBQ25CLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTTtZQUFFLE9BQU87UUFDekIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxFQUFFO1lBQ3hCLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNoQixDQUFDLENBQUM7UUFDRixJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxHQUFHLEVBQUU7WUFDekIsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2pCLENBQUMsQ0FBQztRQUNGLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxHQUFHLENBQUMsVUFBc0IsRUFBRSxFQUFFO1lBQy9DLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDM0IsQ0FBQyxDQUFDO1FBQ0YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEdBQUcsQ0FBQyxPQUFxQixFQUFFLEVBQUU7WUFDaEQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMxQixDQUFDLENBQUM7SUFDSixDQUFDO0lBRU8sV0FBVyxDQUFDLEtBQWMsRUFBRSxNQUF1QjtRQUN6RCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztJQUMzQixDQUFDO0NBQ0YiLCJmaWxlIjoiLi9saWIvdHJhbnNwb3J0Q29ubmVjdGlvbi50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFdmVudHNEaXNwYXRjaGVyIGZyb20gJy4vZXZlbnRzRGlzcGF0Y2hlcic7XG5pbXBvcnQgeyBJU0ZTb2NrZXRDb25maWcsIElTRlNvY2tldEV2ZW50IH0gZnJvbSAnLi9zZlNvY2tldCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHJhbnNwb3J0SG9va3Mge1xuICB1cmw6IHN0cmluZztcbiAgaXNJbml0aWFsaXplZCgpOiBib29sZWFuO1xuICBnZXRTb2NrZXQodXJsOiBzdHJpbmcsIG9wdGlvbnM/OiBJU0ZTb2NrZXRDb25maWcpOiBXZWJTb2NrZXQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRyYW5zcG9ydENvbm5lY3Rpb24gZXh0ZW5kcyBFdmVudHNEaXNwYXRjaGVyIHtcbiAgaG9va3M6IFRyYW5zcG9ydEhvb2tzO1xuXG4gIG5hbWU6IHN0cmluZztcblxuICBzdGF0ZTogc3RyaW5nO1xuXG4gIHNvY2tldD86IFdlYlNvY2tldDtcblxuICBpbml0aWFsaXplOiBGdW5jdGlvbjtcblxuICBjb25zdHJ1Y3Rvcihob29rcyA6IFRyYW5zcG9ydEhvb2tzLCBuYW1lIDogc3RyaW5nKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmluaXRpYWxpemUgPSAoKSA9PiB7XG4gICAgICBjb25zdCBzZWxmID0gdGhpcztcblxuICAgICAgaWYgKHNlbGYuaG9va3MuaXNJbml0aWFsaXplZCgpKSB7XG4gICAgICAgIHNlbGYuY2hhbmdlU3RhdGUoJ2luaXRpYWxpemVkJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZWxmLm9uQ2xvc2UoKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHRoaXMuaG9va3MgPSBob29rcztcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuXG4gICAgdGhpcy5zdGF0ZSA9ICduZXcnO1xuICB9XG5cbiAgY29ubmVjdCgpIDogYm9vbGVhbiB7XG4gICAgaWYgKHRoaXMuc29ja2V0IHx8IHRoaXMuc3RhdGUgIT09ICdpbml0aWFsaXplZCcpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBjb25zdCB7IHVybCB9ID0gdGhpcy5ob29rcztcbiAgICB0cnkge1xuICAgICAgdGhpcy5zb2NrZXQgPSB0aGlzLmhvb2tzLmdldFNvY2tldCh1cmwpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIC8vIFdvcmthcm91bmQgZm9yIE1vYmlsZVNhZmFyaSBidWcgKHNlZSBodHRwczovL2dpc3QuZ2l0aHViLmNvbS8yMDUyMDA2KVxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMub25FcnJvcihlKTtcbiAgICAgICAgdGhpcy5jaGFuZ2VTdGF0ZSgnY2xvc2VkJyk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICB0aGlzLmJpbmRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLmNoYW5nZVN0YXRlKCdjb25uZWN0aW5nJyk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICAvKiogQ2xvc2VzIHRoZSBjb25uZWN0aW9uLlxuICAgKlxuICAgKiBAcmV0dXJuIHtCb29sZWFufSB0cnVlIGlmIHRoZXJlIHdhcyBhIGNvbm5lY3Rpb24gdG8gY2xvc2VcbiAgICovXG4gIGNsb3NlKCkgOiBib29sZWFuIHtcbiAgICBpZiAodGhpcy5zb2NrZXQpIHtcbiAgICAgIHRoaXMuc29ja2V0LmNsb3NlKCk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc2VuZChkYXRhIDogYW55KSA6IGJvb2xlYW4geyAvLyBUT0RPXG4gICAgaWYgKHRoaXMuc3RhdGUgPT09ICdvcGVuJykge1xuICAgICAgLy8gV29ya2Fyb3VuZCBmb3IgTW9iaWxlU2FmYXJpIGJ1ZyAoc2VlIGh0dHBzOi8vZ2lzdC5naXRodWIuY29tLzIwNTIwMDYpXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaWYgKHRoaXMuc29ja2V0KSB7XG4gICAgICAgICAgdGhpcy5zb2NrZXQuc2VuZChkYXRhKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcHJpdmF0ZSB1bmJpbmRMaXN0ZW5lcnMoKSB7XG4gICAgaWYgKCF0aGlzLnNvY2tldCkgcmV0dXJuO1xuICAgIHRoaXMuc29ja2V0Lm9ub3BlbiA9IG51bGw7XG4gICAgdGhpcy5zb2NrZXQub25lcnJvciA9IG51bGw7XG4gICAgdGhpcy5zb2NrZXQub25jbG9zZSA9IG51bGw7XG4gICAgdGhpcy5zb2NrZXQub25tZXNzYWdlID0gbnVsbDtcbiAgfVxuXG5cbiAgcHJpdmF0ZSBvbk9wZW4oKSB7XG4gICAgdGhpcy5jaGFuZ2VTdGF0ZSgnb3BlbicpO1xuICAgIGlmICghdGhpcy5zb2NrZXQpIHJldHVybjtcbiAgICB0aGlzLnNvY2tldC5vbm9wZW4gPSBudWxsO1xuICB9XG5cbiAgcHJpdmF0ZSBvbkVycm9yKGVycm9yPzogc3RyaW5nKSB7XG4gICAgdGhpcy5lbWl0KCdlcnJvcicsIHtcbiAgICAgIHR5cGU6ICdzZlNvY2tldDplcnJvcicsXG4gICAgICBlcnJvcjogZXJyb3IgfHwgJ3dlYnNvY2tldCBjb25uZWN0aW9uIGVycm9yJyxcbiAgICAgIGRhdGE6IG51bGwsXG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIG9uQ2xvc2UoY2xvc2VFdmVudD86IENsb3NlRXZlbnQpIHtcbiAgICBpZiAoY2xvc2VFdmVudCkge1xuICAgICAgdGhpcy5jaGFuZ2VTdGF0ZSgnY2xvc2VkJywge1xuICAgICAgICB0eXBlOiBjbG9zZUV2ZW50Lndhc0NsZWFuID8gJ3NmU29ja2V0OmNsb3NlZCcgOiAnc2ZTb2NrZXQ6ZXJyb3InLFxuICAgICAgICBkYXRhOiBjbG9zZUV2ZW50Lndhc0NsZWFuID8gY2xvc2VFdmVudC5yZWFzb24gOiBudWxsLFxuICAgICAgICBlcnJvcjogY2xvc2VFdmVudC53YXNDbGVhbiA/IG51bGwgOiBjbG9zZUV2ZW50LnJlYXNvbixcbiAgICAgICAgY29udGV4dDoge1xuICAgICAgICAgIGNvZGU6IGNsb3NlRXZlbnQuY29kZSxcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNoYW5nZVN0YXRlKCdjbG9zZWQnKTtcbiAgICB9XG4gICAgdGhpcy51bmJpbmRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLnNvY2tldCA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIHByaXZhdGUgb25NZXNzYWdlKG1lc3NhZ2U6IE1lc3NhZ2VFdmVudCkge1xuICAgIHRoaXMuZW1pdCgnbWVzc2FnZScsIHtcbiAgICAgIHR5cGU6ICdzZlNvY2tldDptZXNzYWdlJyxcbiAgICAgIGRhdGE6IHR5cGVvZiBtZXNzYWdlLmRhdGEgPT09ICdzdHJpbmcnID8gbWVzc2FnZS5kYXRhIDogSlNPTi5zdHJpbmdpZnkobWVzc2FnZS5kYXRhKSxcbiAgICAgIGVycm9yOiBudWxsLFxuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBiaW5kTGlzdGVuZXJzKCkge1xuICAgIGlmICghdGhpcy5zb2NrZXQpIHJldHVybjtcbiAgICB0aGlzLnNvY2tldC5vbm9wZW4gPSAoKSA9PiB7XG4gICAgICB0aGlzLm9uT3BlbigpO1xuICAgIH07XG4gICAgdGhpcy5zb2NrZXQub25lcnJvciA9ICgpID0+IHtcbiAgICAgIHRoaXMub25FcnJvcigpO1xuICAgIH07XG4gICAgdGhpcy5zb2NrZXQub25jbG9zZSA9IChjbG9zZUV2ZW50OiBDbG9zZUV2ZW50KSA9PiB7XG4gICAgICB0aGlzLm9uQ2xvc2UoY2xvc2VFdmVudCk7XG4gICAgfTtcbiAgICB0aGlzLnNvY2tldC5vbm1lc3NhZ2UgPSAobWVzc2FnZTogTWVzc2FnZUV2ZW50KSA9PiB7XG4gICAgICB0aGlzLm9uTWVzc2FnZShtZXNzYWdlKTtcbiAgICB9O1xuICB9XG5cbiAgcHJpdmF0ZSBjaGFuZ2VTdGF0ZShzdGF0ZSA6IHN0cmluZywgcGFyYW1zPzogSVNGU29ja2V0RXZlbnQpIHtcbiAgICB0aGlzLnN0YXRlID0gc3RhdGU7XG4gICAgdGhpcy5lbWl0KHN0YXRlLCBwYXJhbXMpO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/transportConnection.ts\n");

/***/ })

/******/ });